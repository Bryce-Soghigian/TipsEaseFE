{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\DanR\\\\Desktop\\\\Lambda\\\\TipsEaseFE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\DanR\\\\Desktop\\\\Lambda\\\\TipsEaseFE\\\\src\\\\Components\\\\SignUp\\\\SignUp.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #f3e367;\\n  font-size: 2.5em;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  background: none;\\n  color: #f3e367;\\n  border: 1px solid #f3e367;\\n  padding: 1.2rem 2.4rem;\\n  font-size: 2rem;\\n  font-family: 'Ubuntu', sans-serif;\\n  border-radius: 10px;\\n  transition: all 250ms ease-out;\\n  margin-top: 1.4rem;\\n  text-decoration:none;\\n  transition: all 250ms ease-out;\\n\\n  :hover {\\n    cursor: pointer;\\n    background: #f3e367;\\n    color: black;\\n    transition: all 250ms ease-in-out;\\n  }\\n\\n  :focus {\\n      outline: none;\\n  }\\n\\n  svg {\\n    margin-right: 0.6rem;\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  min-width: 50em;\\n  max-width: 50em;\\n  margin: auto;\\n  padding: 2em;\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: column;\\n  align-content: center;\\n  min-height: 65em;\\n  justify-content: space-evenly;\\n  background-color: #4e5055;\\n  box-shadow: 0px 12px 22px -1px #545309;\\n  border-radius: 10px;\\n  font-family: \\\"Ubuntu\\\", sans-serif;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #b22222;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\nimport styled from \"styled-components\";\nconst H5 = styled.h5(_templateObject());\nconst FormContainer = styled.div(_templateObject2());\nconst BTN = styled.button(_templateObject3());\nconst Label = styled.label(_templateObject4());\n\nfunction SignUp({\n  errors,\n  touched\n}) {\n  return React.createElement(Form, {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(FormContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Field, {\n    id: \"username\",\n    type: \"text\",\n    autoComplete: \"off\",\n    placeholder: \"username\",\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, touched.username && errors.username), React.createElement(Label, {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    id: \"password\",\n    type: \"password\",\n    autoComplete: \"off\",\n    placeholder: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, touched.password && errors.password), React.createElement(Label, {\n    htmlFor: \"confirmPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Confirm your password\"), React.createElement(Field, {\n    id: \"passwordConfirmation\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"passwordConfirmation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, touched.passwordConfirmation && errors.passwordConfirmation), React.createElement(Label, {\n    htmlFor: \"rememberPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Remember password?\", \" \", React.createElement(Field, {\n    id: \"rememberPassword\",\n    type: \"checkbox\",\n    name: \"rememberPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, touched.rememberPassword && errors.rememberPassword), React.createElement(BTN, {\n    className: \"formButt\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Sign Up\")));\n}\n\nexport default withFormik({\n  mapPropsToValues: () => {\n    return {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      rememberPassword: false\n    }; // if(rememberPassword===true){\n    //     setToken(localStorage.getItem('token')\n    // }\n  },\n\n  handleSubmit(values) {\n    Swal.fire({\n      title: \"Now Please Login\",\n      imageUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSDOamKMfdxmxQlQsH4_tGp_gfuik8vLENLJl_HxrlswCNvF2Rw\",\n      imageHeight: 100,\n      imageAlt: \"userCity\"\n    });\n    console.log(values);\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().min(3, \"Must be 3 characters or more\").max(15, \"Must be less than 15 characters\").required(\"This field is required\"),\n    password: Yup.string().min(3, \"Must be 3 characters or more\").max(18, \"Must be less than 18 characters\").required(\"This field is required\"),\n    passwordConfirmation: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n  })\n})(SignUp);","map":{"version":3,"sources":["C:\\Users\\DanR\\Desktop\\Lambda\\TipsEaseFE\\src\\Components\\SignUp\\SignUp.js"],"names":["React","withFormik","Form","Field","Yup","Swal","styled","H5","h5","FormContainer","div","BTN","button","Label","label","SignUp","errors","touched","username","password","passwordConfirmation","rememberPassword","mapPropsToValues","confirmPassword","handleSubmit","values","fire","title","imageUrl","imageHeight","imageAlt","console","log","validationSchema","object","shape","string","min","max","required","oneOf","ref"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport styled from \"styled-components\";\r\n\r\nconst H5 = styled.h5`\r\n  color: #b22222;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  min-width: 50em;\r\n  max-width: 50em;\r\n  margin: auto;\r\n  padding: 2em;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  align-content: center;\r\n  min-height: 65em;\r\n  justify-content: space-evenly;\r\n  background-color: #4e5055;\r\n  box-shadow: 0px 12px 22px -1px #545309;\r\n  border-radius: 10px;\r\n  font-family: \"Ubuntu\", sans-serif;\r\n`;\r\nconst BTN =styled.button`\r\n  background: none;\r\n  color: #f3e367;\r\n  border: 1px solid #f3e367;\r\n  padding: 1.2rem 2.4rem;\r\n  font-size: 2rem;\r\n  font-family: 'Ubuntu', sans-serif;\r\n  border-radius: 10px;\r\n  transition: all 250ms ease-out;\r\n  margin-top: 1.4rem;\r\n  text-decoration:none;\r\n  transition: all 250ms ease-out;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background: #f3e367;\r\n    color: black;\r\n    transition: all 250ms ease-in-out;\r\n  }\r\n\r\n  :focus {\r\n      outline: none;\r\n  }\r\n\r\n  svg {\r\n    margin-right: 0.6rem;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  color: #f3e367;\r\n  font-size: 2.5em;\r\n`;\r\n\r\nfunction SignUp({ errors, touched }) {\r\n  return (\r\n    <Form className=\"form\">\r\n      <FormContainer>\r\n        <Label htmlFor=\"username\">Username</Label>\r\n        <Field\r\n          id=\"username\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"username\"\r\n          name=\"username\"\r\n        />\r\n        <H5>{touched.username && errors.username}</H5>\r\n        <Label htmlFor=\"password\">Password</Label>\r\n        <Field\r\n          id=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <H5>{touched.password && errors.password}</H5>\r\n        <Label htmlFor=\"confirmPassword\">Confirm your password</Label>\r\n        <Field\r\n          id=\"passwordConfirmation\"\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"passwordConfirmation\"\r\n        />\r\n        <H5>{touched.passwordConfirmation && errors.passwordConfirmation}</H5>\r\n        <Label htmlFor=\"rememberPassword\">\r\n          Remember password?{\" \"}\r\n          <Field\r\n            id=\"rememberPassword\"\r\n            type=\"checkbox\"\r\n            name=\"rememberPassword\"\r\n          />\r\n        </Label>\r\n\r\n        <H5>{touched.rememberPassword && errors.rememberPassword}</H5>\r\n        <BTN className=\"formButt\" type=\"submit\">\r\n          Sign Up\r\n        </BTN>\r\n      </FormContainer>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default withFormik({\r\n  mapPropsToValues: () => {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      rememberPassword: false\r\n    };\r\n    // if(rememberPassword===true){\r\n    //     setToken(localStorage.getItem('token')\r\n    // }\r\n  },\r\n  handleSubmit(values) {\r\n    Swal.fire({\r\n      title: \"Now Please Login\",\r\n      imageUrl:\r\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSDOamKMfdxmxQlQsH4_tGp_gfuik8vLENLJl_HxrlswCNvF2Rw\",\r\n      imageHeight: 100,\r\n      imageAlt: \"userCity\"\r\n    });\r\n    console.log(values);\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    username: Yup.string()\r\n      .min(3, \"Must be 3 characters or more\")\r\n      .max(15, \"Must be less than 15 characters\")\r\n      .required(\"This field is required\"),\r\n    password: Yup.string()\r\n      .min(3, \"Must be 3 characters or more\")\r\n      .max(18, \"Must be less than 18 characters\")\r\n      .required(\"This field is required\"),\r\n    passwordConfirmation: Yup.string().oneOf(\r\n      [Yup.ref(\"password\"), null],\r\n      \"Passwords must match\"\r\n    )\r\n  })\r\n})(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}