{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\colin\\\\Documents\\\\TipsEaseFE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\colin\\\\Documents\\\\TipsEaseFE\\\\src\\\\Components\\\\LandingPage\\\\Workers\\\\TipForm.js\";\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  background: none;\\n  color: #f3e367;\\n  border: 2px solid #f3e367;\\n  padding: 1.4rem 2.6rem;\\n  font-size: 2rem;\\n  font-family: 'Ubuntu', sans-serif;\\n  border-radius: 10px;\\n  transition: all 200ms ease-out;\\n  text-decoration: none;\\n  font-weight: 500;\\n  text-transform: uppercase;\\n  letter-spacing: 1px;\\n  margin-bottom: 5rem;\\n\\n  :hover {\\n    cursor: pointer;\\n    background: #f3e367;\\n    color: black;\\n  }\\n\\n  :focus {\\n      outline: none;\\n  }\\n\\n  svg {\\n    margin-right: 0.3rem;\\n  }\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  border-radius: 10px;\\n  border: none;\\n  padding: 1rem 2rem;\\n  font-size: 2rem;\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #c9c9c9;\\n  font-size: 2.4rem;\\n  font-family: 'Ubuntu', sans-serif;\\n  margin: 2rem 0;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 4rem;\\n  color: #f3e367;\\n  margin: 1.5rem auto;\\n  font-family: \\\"Ubuntu\\\", sans-serif;\\n  margin-bottom: 1rem;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  margin: 0 auto;\\n    margin-top: 120px;\\n    width: 800px;\\n    height: 350px;\\n    background: #202020;\\n    border-radius: 5px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: space-between;\\n    padding: 2.5rem 0;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\ncolor:\\t#B22222;\\nfont-size: 2rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoins } from '@fortawesome/free-solid-svg-icons';\nimport Swal from 'sweetalert2';\nimport styled from 'styled-components';\nconst H5 = styled.h5(_templateObject());\nconst FormContainer = styled.div(_templateObject2());\nconst FormLogo = styled.h1(_templateObject3());\nconst TipFormLabel = styled.label(_templateObject4());\nconst TipFormField = styled(Field)(_templateObject5());\nconst TipSubmitButton = styled.button(_templateObject6());\n\nfunction TipForm({\n  touched,\n  errors\n}) {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(FormContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(FormLogo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"tipsEase\"), React.createElement(TipFormLabel, {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Enter tip amount\"), React.createElement(TipFormField, {\n    id: \"payment\",\n    type: \"payment\",\n    autoComplete: \"off\",\n    placeholder: \"Amount\",\n    name: \"payment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, touched.payment && errors.username), React.createElement(TipSubmitButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faCoins,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), \" Pay\")));\n}\n\nexport default withFormik({\n  mapPropsToValues() {\n    return {\n      payment: ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().min(1, \"Must tip at least 1 dollar\")\n  }),\n\n  handleSubmit(values, formikBag) {\n    //   {if(token === null){\n    //     Swal.fire({\n    //         position: 'center',\n    //         type: 'error',\n    //         title: 'Try Again!',\n    //         showConfirmButton: false,\n    //         timer: 2500\n    //       })\n    //   }else{\n    Swal.fire({\n      position: 'center',\n      type: 'success',\n      title: 'Thanks for your tip',\n      showConfirmButton: false,\n      timer: 1500\n    }); //   }}\n  }\n\n})(TipForm);","map":{"version":3,"sources":["C:\\Users\\colin\\Documents\\TipsEaseFE\\src\\Components\\LandingPage\\Workers\\TipForm.js"],"names":["React","withFormik","Form","Field","Yup","FontAwesomeIcon","faCoins","Swal","styled","H5","h5","FormContainer","div","FormLogo","h1","TipFormLabel","label","TipFormField","TipSubmitButton","button","TipForm","touched","errors","payment","username","mapPropsToValues","validationSchema","object","shape","string","min","handleSubmit","values","formikBag","fire","position","type","title","showConfirmButton","timer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,EAAE,GAAGD,MAAM,CAACE,EAAV,mBAAR;AAKA,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAV,oBAAnB;AAeA,MAAMC,QAAQ,GAAGL,MAAM,CAACM,EAAV,oBAAd;AAQA,MAAMC,YAAY,GAAGP,MAAM,CAACQ,KAAV,oBAAlB;AAOA,MAAMC,YAAY,GAAGT,MAAM,CAACL,KAAD,CAAT,oBAAlB;AAWA,MAAMe,eAAe,GAAGV,MAAM,CAACW,MAAV,oBAArB;;AA+BA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAjB,EAAsC;AAEpC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEF,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAG,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFE,EAGF,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,SAAjB;AAA2B,IAAA,IAAI,EAAC,SAAhC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAA6D,IAAA,WAAW,EAAC,QAAzE;AAAkF,IAAA,IAAI,EAAG,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHE,EAID,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAO,CAACE,OAAR,IAAmBD,MAAM,CAACE,QAA/B,CAJC,EAMF,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAElB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,SANE,CADF,CADF;AAaD;;AAED,eAAeL,UAAU,CAAC;AACxBwB,EAAAA,gBAAgB,GAAG;AACjB,WAAO;AAEHF,MAAAA,OAAO,EAAE;AAFN,KAAP;AAKD,GAPuB;;AAQxBG,EAAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB;AACnCJ,IAAAA,QAAQ,EAAEpB,GAAG,CAACyB,MAAJ,GACTC,GADS,CACL,CADK,EACH,4BADG;AADyB,GAAnB,CARM;;AAaxBC,EAAAA,YAAY,CAACC,MAAD,EAASC,SAAT,EAAoB;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI1B,IAAAA,IAAI,CAAC2B,IAAL,CAAU;AACNC,MAAAA,QAAQ,EAAE,QADJ;AAENC,MAAAA,IAAI,EAAE,SAFA;AAGNC,MAAAA,KAAK,EAAE,qBAHD;AAINC,MAAAA,iBAAiB,EAAE,KAJb;AAKNC,MAAAA,KAAK,EAAE;AALD,KAAV,EAZ0B,CAmB9B;AAED;;AAlCuB,CAAD,CAAV,CAmCZnB,OAnCY,CAAf","sourcesContent":["import React from 'react';\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\r\nimport Swal from 'sweetalert2'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst H5 = styled.h5`\r\ncolor:\t#B22222;\r\nfont-size: 2rem;\r\n`\r\n\r\nconst FormContainer = styled.div`\r\n  margin: 0 auto;\r\n    margin-top: 120px;\r\n    width: 800px;\r\n    height: 350px;\r\n    background: #202020;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 2.5rem 0;\r\n`;\r\n\r\n\r\nconst FormLogo = styled.h1`\r\n  font-size: 4rem;\r\n  color: #f3e367;\r\n  margin: 1.5rem auto;\r\n  font-family: \"Ubuntu\", sans-serif;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst TipFormLabel = styled.label`\r\n  color: #c9c9c9;\r\n  font-size: 2.4rem;\r\n  font-family: 'Ubuntu', sans-serif;\r\n  margin: 2rem 0;\r\n`;\r\n\r\nconst TipFormField = styled(Field)`\r\n  border-radius: 10px;\r\n  border: none;\r\n  padding: 1rem 2rem;\r\n  font-size: 2rem;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst TipSubmitButton = styled.button`\r\n  background: none;\r\n  color: #f3e367;\r\n  border: 2px solid #f3e367;\r\n  padding: 1.4rem 2.6rem;\r\n  font-size: 2rem;\r\n  font-family: 'Ubuntu', sans-serif;\r\n  border-radius: 10px;\r\n  transition: all 200ms ease-out;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 5rem;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background: #f3e367;\r\n    color: black;\r\n  }\r\n\r\n  :focus {\r\n      outline: none;\r\n  }\r\n\r\n  svg {\r\n    margin-right: 0.3rem;\r\n  }\r\n`;\r\n\r\n\r\nfunction TipForm({ touched, errors }) {\r\n\r\n  return (\r\n    <Form>\r\n      <FormContainer>\r\n      <FormLogo>tipsEase</FormLogo>\r\n    <TipFormLabel htmlFor = \"username\">Enter tip amount</TipFormLabel>\r\n    <TipFormField id=\"payment\" type=\"payment\" autoComplete=\"off\" placeholder=\"Amount\" name = \"payment\"/>\r\n     <H5>{touched.payment && errors.username}</H5>\r\n    \r\n    <TipSubmitButton type=\"submit\"><FontAwesomeIcon icon={faCoins} /> Pay</TipSubmitButton>\r\n    </FormContainer>\r\n </Form> \r\n \r\n  );\r\n}\r\n\r\nexport default withFormik({\r\n  mapPropsToValues() {\r\n    return {\r\n       \r\n        payment: ''\r\n       \r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    username: Yup.string()\r\n    .min(1,\"Must tip at least 1 dollar\")\r\n\r\n  }),\r\n  handleSubmit(values, formikBag) {\r\n    \r\n\r\n    //   {if(token === null){\r\n    //     Swal.fire({\r\n    //         position: 'center',\r\n    //         type: 'error',\r\n    //         title: 'Try Again!',\r\n    //         showConfirmButton: false,\r\n    //         timer: 2500\r\n    //       })\r\n    //   }else{\r\n        Swal.fire({\r\n            position: 'center',\r\n            type: 'success',\r\n            title: 'Thanks for your tip',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n    //   }}\r\n\r\n  }\r\n})(TipForm);\r\n"]},"metadata":{},"sourceType":"module"}