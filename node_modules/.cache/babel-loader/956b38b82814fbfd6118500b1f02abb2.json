{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\colin\\\\Documents\\\\TipsEaseFE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\colin\\\\Documents\\\\TipsEaseFE\\\\src\\\\Components\\\\Login\\\\Login.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\ncolor:\\t#B22222;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport styled from 'styled-components';\nconst H5 = styled.h5(_templateObject());\n\nfunction Login({\n  touched,\n  errors\n}) {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"username\"), React.createElement(Field, {\n    id: \"username\",\n    type: \"username\",\n    autoComplete: \"off\",\n    placeholder: \"username\",\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, touched.username && errors.username), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"password\"), React.createElement(Field, {\n    id: \"password\",\n    type: \"password\",\n    autoComplete: \"off\",\n    placeholder: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, touched.password && errors.password), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Login\"));\n}\n\nexport default withFormik({\n  mapPropsToValues() {\n    return {\n      username: '',\n      password: '' // confirmPassword: \"\",\n      // rememberPassword: false\n\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().min(3, \"Must be 3 characters or more\").max(20, \"Must be less than 20 characters\").required(\"This field is required\"),\n    password: Yup.string().min(3, \"Must be 3 characters or more\").max(100, \"Must be less than 100 characters\").required(\"Enter a password to continue\") // passwordConfirmation: Yup.string()\n    // .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n\n  }),\n\n  handleSubmit(values, formikBag) {\n    axios.post(\"http://localhost:4000/api/register\", values).then(response => {\n      localStorage.setItem('token', response.data.payload);\n      console.log('does token data exist:', response.data.payload);\n      formikBag.props.history.push('/');\n      formikBag.props.setToken(response.data.payload);\n    }).catch(e => {// console.log(e.response.data && response.data);\n    }); //   {if(token === null){\n    //     Swal.fire({\n    //         position: 'center',\n    //         type: 'error',\n    //         title: 'Try Again!',\n    //         showConfirmButton: false,\n    //         timer: 2500\n    //       })\n    //   }else{\n\n    Swal.fire({\n      position: 'center',\n      type: 'success',\n      title: 'Welcome Back!',\n      showConfirmButton: false,\n      timer: 2500\n    }); //   }}\n  }\n\n})(Login);","map":{"version":3,"sources":["C:\\Users\\colin\\Documents\\TipsEaseFE\\src\\Components\\Login\\Login.js"],"names":["React","withFormik","Form","Field","Yup","axios","Redirect","Swal","styled","H5","h5","Login","touched","errors","token","localStorage","getItem","username","password","mapPropsToValues","validationSchema","object","shape","string","min","max","required","handleSubmit","values","formikBag","post","then","response","setItem","data","payload","console","log","props","history","push","setToken","catch","e","fire","position","type","title","showConfirmButton","timer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Swal from 'sweetalert2'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst H5 = styled.h5`\r\ncolor:\t#B22222;\r\n`\r\n\r\n\r\nfunction Login({ touched, errors }) {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if (token) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n    <label htmlFor = \"username\">username</label>\r\n    <Field id=\"username\" type=\"username\" autoComplete=\"off\" placeholder=\"username\" name = \"username\"/>\r\n     <H5>{touched.username && errors.username}</H5>\r\n    <label htmlFor = \"password\">password</label>\r\n    <Field id=\"password\" type=\"password\" autoComplete=\"off\" placeholder=\"password\" name= \"password\"/>\r\n    <H5>{touched.password && errors.password}</H5>\r\n    {/* <label htmlFor = \"confirmPassword\">Confirm your password</label>\r\n    <Field id=\"passwordConfirmation\" type=\"password\" placeholder=\"passwordConfirmation\" name=\"passwordConfirmation\"/>\r\n   <H5>{touched.passwordConfirmation && errors.passwordConfirmation}</H5>\r\n   <label htmlFor = \"rememberPassword\">Let us remember your password?</label>\r\n    <Field id=\"rememberPassword\" type=\"checkbox\" name=\"rememberPassword\"/>\r\n    <H5>{touched.rememberPassword && errors.rememberPassword}</H5> */}\r\n    <button type=\"submit\">Login</button>\r\n </Form> \r\n \r\n  );\r\n}\r\n\r\nexport default withFormik({\r\n  mapPropsToValues() {\r\n    return {\r\n        username: '',\r\n        password: ''\r\n        // confirmPassword: \"\",\r\n        // rememberPassword: false\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    username: Yup.string()\r\n    .min(3, \"Must be 3 characters or more\")\r\n    .max(20, \"Must be less than 20 characters\")\r\n    .required(\"This field is required\"),\r\n  password: Yup.string()\r\n    .min(3, \"Must be 3 characters or more\")\r\n    .max(100, \"Must be less than 100 characters\")\r\n    .required(\"Enter a password to continue\"),\r\n    // passwordConfirmation: Yup.string()\r\n    // .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n  }),\r\n  handleSubmit(values, formikBag) {\r\n    axios\r\n      .post(`http://localhost:4000/api/register`, values)\r\n      .then((response) => {\r\n        localStorage.setItem('token', response.data.payload);\r\n        console.log('does token data exist:', response.data.payload)\r\n        formikBag.props.history.push('/');\r\n        formikBag.props.setToken(response.data.payload)\r\n      })\r\n      .catch((e) => {\r\n        // console.log(e.response.data && response.data);\r\n      });\r\n    //   {if(token === null){\r\n    //     Swal.fire({\r\n    //         position: 'center',\r\n    //         type: 'error',\r\n    //         title: 'Try Again!',\r\n    //         showConfirmButton: false,\r\n    //         timer: 2500\r\n    //       })\r\n    //   }else{\r\n        Swal.fire({\r\n            position: 'center',\r\n            type: 'success',\r\n            title: 'Welcome Back!',\r\n            showConfirmButton: false,\r\n            timer: 2500\r\n          })\r\n    //   }}\r\n\r\n  }\r\n})(Login);\r\n"]},"metadata":{},"sourceType":"module"}