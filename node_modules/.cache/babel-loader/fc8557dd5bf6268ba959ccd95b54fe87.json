{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\DanR\\\\Desktop\\\\Lambda\\\\TipsEaseFE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\DanR\\\\Desktop\\\\Lambda\\\\TipsEaseFE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\DanR\\\\Desktop\\\\Lambda\\\\TipsEaseFE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\DanR\\\\Desktop\\\\Lambda\\\\TipsEaseFE\\\\src\\\\Components\\\\LandingPage\\\\CreateWorker\\\\CreateForm.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #f3e367;\\n  font-size: 2.5em;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #f3e367;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 9em;\\n  margin: 0 auto;\\n  background-color: #f3e367;\\n  border: 2px solid black;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\nposition: relative;\\nmin-width: 50em;\\nmax-width: 50em;\\nalign-content: center;\\nmargin: 10.0987em auto 0em auto;\\npadding:.001em;\\ndisplay: flex;\\nflex-wrap: wrap;\\nflex-direction: column;\\nalign-content: center;\\nmin-height: 65em;\\njustify-content: space-evenly;\\nbackground-color: #202020;\\nbox-shadow: 0px 12px 22px -1px #545309;\\nborder-radius: 10px;\\nfont-family: \\\"Ubuntu\\\", sans-serif;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #b22222;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\nimport axios from 'axios';\nimport styled from \"styled-components\";\nconst H2 = styled.h2(_templateObject());\nconst FormContainer = styled.div(_templateObject2());\nconst Butt = styled.button(_templateObject3());\nconst Input = styled.input(_templateObject4());\nconst Label = styled.label(_templateObject5());\n\nconst CreateForm = props => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedFile = _useState2[0],\n        setSelectedFile = _useState2[1]; //const [workerData, setWorkerData] = useState({ name: \"\", workDuration: \"\", image: {} });\n\n\n  const fileSelectedHandler = event => {\n    const newValues = _objectSpread({}, props.values);\n\n    newValues[\"image\"] = event.target.files[0];\n    props.setValues(newValues); //setSelectedFile(event.target.files[0]);\n  };\n  /*const fileUploadHandler = event => {\r\n    event.preventDefault();\r\n    const fd = new FormData();\r\n    fd.append(\"image\", selectedFile, selectedFile.name);\r\n    Axios.post(\"\", fd, {\r\n      onUploadProgress: progressEvent => {\r\n        return (\r\n          <h1>\r\n            {Math.round((progressEvent.loaded / progressEvent.total) * 100) +\r\n              \"%\"}\r\n          </h1>\r\n        );\r\n      }\r\n    }).then(res => {\r\n      console.log(res, \"this is the results of our post\");\r\n    });\r\n  };*/\n\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(FormContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Select an Image\"), React.createElement(\"input\", {\n    id: \"image\",\n    type: \"file\",\n    name: \"image\",\n    onChange: fileSelectedHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Label, {\n    htmlFor: \"first_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"First name:\"), React.createElement(Field, {\n    id: \"first_name\",\n    type: \"text\",\n    autoComplete: \"off\",\n    placeholder: \"first name\",\n    name: \"first_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Label, {\n    htmlFor: \"last_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Last name:\"), React.createElement(Field, {\n    id: \"last_name\",\n    type: \"text\",\n    autoComplete: \"off\",\n    placeholder: \"last name\",\n    name: \"last_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Label, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(Field, {\n    id: \"email\",\n    type: \"email\",\n    autoComplete: \"off\",\n    placeholder: \"example@gmail.com\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Label, {\n    htmlFor: \"tagline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Your Tagline:\"), React.createElement(Field, {\n    id: \"tagline\",\n    type: \"text\",\n    autoComplete: \"off\",\n    placeholder: \"Your tagline...\",\n    name: \"tagline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(Label, {\n    htmlFor: \"start_date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"When did you start?\"), React.createElement(Field, {\n    id: \"start_date\",\n    type: \"number\",\n    autoComplete: \"off\",\n    placeholder: \"date\",\n    name: \"start_date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Butt, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Create Profile\"), React.createElement(H2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, props.touched.name && props.errors.workDuration)));\n};\n\nconst formikCreateForm = withFormik({\n  mapPropsToValues: ({\n    workerList,\n    setWorkerList,\n    first_name,\n    last_name,\n    email,\n    image,\n    tagline,\n    start_date\n  }) => {\n    return {\n      workerList: workerList || [],\n      setWorkerList: setWorkerList || (() => {}),\n      first_name: first_name || \"\",\n      last_name: last_name || \"\",\n      email: email || \"\",\n      image: image || {},\n      tagline: tagline || \"\",\n      start_date: start_date || 0\n    };\n  },\n\n  handleSubmit(values, {\n    resetForm\n  }) {\n    function create_UUID() {\n      var dt = new Date().getTime();\n      var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c == \"x\" ? r : r & 0x3 | 0x8).toString(16);\n      });\n      return uuid;\n    }\n\n    console.log(\"Hi there i did the thing\");\n    const uniqueId = create_UUID();\n    let fileToUrl = '';\n\n    if (values.image.name) {\n      fileToUrl = URL.createObjectURL(values.image);\n    }\n    /*\r\n    {\r\n      id: uniqueId,\r\n      first_name: values.first_name,\r\n      last_name: values.last_name,\r\n      email: values.email,\r\n      photo_url: fileToUrl,\r\n      tagline: values.tagline,\r\n      start_date: values.start_date\r\n    }\r\n    */\n\n\n    axios.put(\"https://tipsease-backend-new.herokuapp.com/api/tippees/\".concat(uniqueId), {\n      id: uniqueId,\n      data: {\n        first_name: values.first_name,\n        last_name: values.last_name,\n        email: values.email,\n        photo_url: fileToUrl,\n        tagline: values.tagline,\n        start_date: values.start_date,\n        password: 'hello'\n      }\n    }).then(res => {\n      console.log('Put Res:', res);\n      resetForm();\n    }).catch(err => {\n      console.log(\"Put Error:\", err);\n    }); // values.setWorkerList([\n    //   ...values.workerList,\n    //   {\n    //     name: values.name,\n    //     workType: values.workType,\n    //     workDuration: values.workDuration,\n    //     image: values.image,\n    //     id: create_UUID()\n    //   }\n    // ]);\n  },\n\n  validationSchema: Yup.object().shape({\n    first_name: Yup.string().min(3, \"Must be 3 characters or more\").max(15, \"Must be less than 15 characters\").required(\"This field is required\"),\n    last_name: Yup.string().min(3, \"Must be 3 characters or more\").max(15, \"Must be less than 15 characters\").required(\"This field is required\"),\n    email: Yup.string().email(\"Must be a valid email\").required(\"This field is required\"),\n    tagline: Yup.string().min(3, \"Must be 3 characters or more\").max(25, \"Must be less than 25 characters\").required(\"This field is required\"),\n    start_Date: Yup.number() //   .min(1, \"Must be 3 characters or more\")\n    //   .max(18, \"Must be less than 18 characters\")\n\n  })\n})(CreateForm);\nexport default formikCreateForm;","map":{"version":3,"sources":["C:\\Users\\DanR\\Desktop\\Lambda\\TipsEaseFE\\src\\Components\\LandingPage\\CreateWorker\\CreateForm.js"],"names":["React","useState","withFormik","Form","Field","Yup","Swal","axios","styled","H2","h2","FormContainer","div","Butt","button","Input","input","Label","label","CreateForm","props","selectedFile","setSelectedFile","fileSelectedHandler","event","newValues","values","target","files","setValues","touched","name","errors","workDuration","formikCreateForm","mapPropsToValues","workerList","setWorkerList","first_name","last_name","email","image","tagline","start_date","handleSubmit","resetForm","create_UUID","dt","Date","getTime","uuid","replace","c","r","Math","random","floor","toString","console","log","uniqueId","fileToUrl","URL","createObjectURL","put","id","data","photo_url","password","then","res","catch","err","validationSchema","object","shape","string","min","max","required","start_Date","number"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from 'axios';\r\nimport styled from \"styled-components\";\r\n\r\nconst H2 = styled.h2`\r\n  color: #b22222;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\nposition: relative;\r\nmin-width: 50em;\r\nmax-width: 50em;\r\nalign-content: center;\r\nmargin: 10.0987em auto 0em auto;\r\npadding:.001em;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\nalign-content: center;\r\nmin-height: 65em;\r\njustify-content: space-evenly;\r\nbackground-color: #202020;\r\nbox-shadow: 0px 12px 22px -1px #545309;\r\nborder-radius: 10px;\r\nfont-family: \"Ubuntu\", sans-serif;\r\n`;\r\n\r\nconst Butt = styled.button`\r\n  width: 9em;\r\n  margin: 0 auto;\r\n  background-color: #f3e367;\r\n  border: 2px solid black;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  color: #f3e367;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: #f3e367;\r\n  font-size: 2.5em;\r\n`;\r\n\r\nconst CreateForm = props => {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  //const [workerData, setWorkerData] = useState({ name: \"\", workDuration: \"\", image: {} });\r\n\r\n  const fileSelectedHandler = event => {\r\n    const newValues = { ...props.values };\r\n    newValues[\"image\"] = event.target.files[0];\r\n    props.setValues(newValues);\r\n    //setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  /*const fileUploadHandler = event => {\r\n    event.preventDefault();\r\n    const fd = new FormData();\r\n    fd.append(\"image\", selectedFile, selectedFile.name);\r\n    Axios.post(\"\", fd, {\r\n      onUploadProgress: progressEvent => {\r\n        return (\r\n          <h1>\r\n            {Math.round((progressEvent.loaded / progressEvent.total) * 100) +\r\n              \"%\"}\r\n          </h1>\r\n        );\r\n      }\r\n    }).then(res => {\r\n      console.log(res, \"this is the results of our post\");\r\n    });\r\n  };*/\r\n\r\n  return (\r\n    <Form>\r\n      <FormContainer>\r\n        <Label>Select an Image</Label>\r\n        <input\r\n          id=\"image\"\r\n          type=\"file\"\r\n          name=\"image\"\r\n          onChange={fileSelectedHandler}\r\n        />\r\n        {/*<Butt onClick={fileUploadHandler}>Upload Image</Butt>*/}\r\n        <Label htmlFor=\"first_name\">First name:</Label>\r\n        <Field\r\n          id=\"first_name\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"first name\"\r\n          name=\"first_name\"\r\n        />\r\n        <Label htmlFor=\"last_name\">Last name:</Label>\r\n        <Field\r\n          id=\"last_name\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"last name\"\r\n          name=\"last_name\"\r\n        />\r\n        <Label htmlFor=\"email\">Email:</Label>\r\n        <Field\r\n          id=\"email\"\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"example@gmail.com\"\r\n          name=\"email\"\r\n        />\r\n        <Label htmlFor=\"tagline\">Your Tagline:</Label>\r\n        <Field\r\n          id=\"tagline\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Your tagline...\"\r\n          name=\"tagline\"\r\n        />\r\n        {/*<Label htmlFor=\"workType\">What is your position?</Label>\r\n        <Field id=\"workType\" component=\"select\" name=\"workType\">\r\n          <option value=\"Bartender\" selected>\r\n            Bartender\r\n          </option>\r\n          <option value=\"Server\">Server</option>\r\n          <option value=\"Waiter\">Waiter</option>\r\n          <option value=\"Valet\">Valet</option>\r\n          <option value=\"Bellhop\">Bellhop</option>\r\n        </Field>*/}\r\n        {/*<H5>{props.touched.name && props.errors.workDuration}</H5>*/}\r\n        <Label htmlFor=\"start_date\">When did you start?</Label>\r\n        <Field\r\n          id=\"start_date\"\r\n          type=\"number\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"date\"\r\n          name=\"start_date\"\r\n        />\r\n        <Butt type=\"submit\">Create Profile</Butt>\r\n        <H2>{props.touched.name && props.errors.workDuration}</H2>\r\n      </FormContainer>\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nconst formikCreateForm = withFormik({\r\n  mapPropsToValues: ({\r\n    workerList,\r\n    setWorkerList,\r\n    first_name,\r\n    last_name,\r\n    email,\r\n    image,\r\n    tagline,\r\n    start_date\r\n  }) => {\r\n    return {\r\n      workerList: workerList || [],\r\n      setWorkerList: setWorkerList || (() => {}),\r\n      first_name: first_name || \"\",\r\n      last_name: last_name || \"\",\r\n      email: email || \"\",\r\n      image: image || {},\r\n      tagline: tagline || \"\",\r\n      start_date: start_date || 0\r\n    };\r\n  },\r\n  handleSubmit(values, { resetForm }) {\r\n    function create_UUID() {\r\n      var dt = new Date().getTime();\r\n      var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\r\n        /[xy]/g,\r\n        function(c) {\r\n          var r = (dt + Math.random() * 16) % 16 | 0;\r\n          dt = Math.floor(dt / 16);\r\n          return (c == \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n        }\r\n      );\r\n      return uuid;\r\n    }\r\n    console.log(\"Hi there i did the thing\");\r\n    const uniqueId = create_UUID();\r\n    let fileToUrl = '';\r\n    if(values.image.name){\r\n      fileToUrl = URL.createObjectURL(values.image);\r\n    }\r\n\r\n    /*\r\n    {\r\n      id: uniqueId,\r\n      first_name: values.first_name,\r\n      last_name: values.last_name,\r\n      email: values.email,\r\n      photo_url: fileToUrl,\r\n      tagline: values.tagline,\r\n      start_date: values.start_date\r\n    }\r\n    */\r\n    axios.put(`https://tipsease-backend-new.herokuapp.com/api/tippees/${uniqueId}`, {\r\n      id: uniqueId,\r\n      data:{\r\n        first_name: values.first_name,\r\n        last_name: values.last_name,\r\n        email: values.email,\r\n        photo_url: fileToUrl,\r\n        tagline: values.tagline,\r\n        start_date: values.start_date,\r\n        password: 'hello'}\r\n    })\r\n    .then(res => {\r\n      console.log('Put Res:',res);\r\n      resetForm();\r\n    })\r\n    .catch( err => {\r\n      console.log(\"Put Error:\", err);\r\n    })  \r\n    \r\n    // values.setWorkerList([\r\n    //   ...values.workerList,\r\n    //   {\r\n    //     name: values.name,\r\n    //     workType: values.workType,\r\n    //     workDuration: values.workDuration,\r\n    //     image: values.image,\r\n    //     id: create_UUID()\r\n    //   }\r\n    // ]);\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n     first_name: Yup.string()\r\n       .min(3, \"Must be 3 characters or more\")\r\n       .max(15, \"Must be less than 15 characters\")\r\n       .required(\"This field is required\"),\r\n     last_name: Yup.string()\r\n       .min(3, \"Must be 3 characters or more\")\r\n       .max(15, \"Must be less than 15 characters\")\r\n       .required(\"This field is required\"),\r\n     email: Yup.string()\r\n       .email(\"Must be a valid email\")\r\n       .required(\"This field is required\"),\r\n     tagline: Yup.string()\r\n       .min(3, \"Must be 3 characters or more\")\r\n       .max(25, \"Must be less than 25 characters\")\r\n       .required(\"This field is required\"),\r\n     start_Date: Yup.number()\r\n    //   .min(1, \"Must be 3 characters or more\")\r\n    //   .max(18, \"Must be less than 18 characters\")\r\n  })\r\n})(CreateForm);\r\n\r\nexport default formikCreateForm;"]},"metadata":{},"sourceType":"module"}