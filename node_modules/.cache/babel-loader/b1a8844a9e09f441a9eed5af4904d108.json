{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\colin\\\\Documents\\\\TipsEaseFE\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\colin\\\\Documents\\\\TipsEaseFE\\\\src\\\\Components\\\\SignUp\\\\SignUp.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\ncolor:\\t#B22222;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\nimport styled from 'styled-components';\nconst H5 = styled.h5(_templateObject());\n\nfunction SignUp({\n  errors,\n  touched\n}) {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"username\"), React.createElement(Field, {\n    id: \"username\",\n    type: \"text\",\n    autocomplete: \"off\",\n    placeholder: \"username\",\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, touched.username && errors.username), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"password\"), React.createElement(Field, {\n    id: \"password\",\n    type: \"password\",\n    autocomplete: \"off\",\n    placeholder: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, touched.password && errors.password), React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Confirm your password\"), React.createElement(Field, {\n    id: \"passwordConfirmation\",\n    type: \"password\",\n    placeholder: \"passwordConfirmation\",\n    name: \"passwordConfirmation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, touched.passwordConfirmation && errors.passwordConfirmation), React.createElement(\"label\", {\n    htmlFor: \"rememberPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Let us remember your password?\"), React.createElement(Field, {\n    id: \"rememberPassword\",\n    type: \"checkbox\",\n    name: \"rememberPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(H5, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, touched.rememberPassword && errors.rememberPassword), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"SignUp\"));\n}\n\n;\nexport default withFormik({\n  mapPropsToValues: () => {\n    return {\n      username: '',\n      password: \"\",\n      confirmPassword: \"\",\n      rememberPassword: false // if(rememberPassword===true){\n      //     setToken(localStorage.getItem('token')\n      // }\n\n    };\n  },\n\n  handleSubmit(values) {\n    Swal.fire({\n      title: 'Now Please Login',\n      imageUrl: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSDOamKMfdxmxQlQsH4_tGp_gfuik8vLENLJl_HxrlswCNvF2Rw',\n      imageHeight: 100,\n      imageAlt: 'userCity'\n    });\n    console.log(values);\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().min(3, \"Must be 3 characters or more\").max(15, \"Must be less than 15 characters\").required(\"This field is required\"),\n    password: Yup.string().min(3, \"Must be 3 characters or more\").max(18, \"Must be less than 18 characters\").required(\"This field is required\"),\n    passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\n  })\n})(SignUp);","map":{"version":3,"sources":["C:\\Users\\colin\\Documents\\TipsEaseFE\\src\\Components\\SignUp\\SignUp.js"],"names":["React","withFormik","Form","Field","Yup","Swal","styled","H5","h5","SignUp","errors","touched","username","password","passwordConfirmation","rememberPassword","mapPropsToValues","confirmPassword","handleSubmit","values","fire","title","imageUrl","imageHeight","imageAlt","console","log","validationSchema","object","shape","string","min","max","required","oneOf","ref"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport { withFormik, Form, Field} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\"\r\nimport styled from 'styled-components';\r\n \r\n\r\nconst H5 = styled.h5`\r\ncolor:\t#B22222;\r\n`\r\n\r\n\r\n function SignUp({errors,touched}) {\r\n    return (\r\n        \r\n          <Form>\r\n              <label htmlFor = \"username\">username</label>\r\n              <Field id=\"username\" type=\"text\" autocomplete=\"off\" placeholder=\"username\" name = \"username\"/>\r\n               <H5>{touched.username && errors.username}</H5>\r\n              <label htmlFor = \"password\">password</label>\r\n              <Field id=\"password\" type=\"password\" autocomplete=\"off\" placeholder=\"password\" name= \"password\"/>\r\n              <H5>{touched.password && errors.password}</H5>\r\n              <label htmlFor = \"confirmPassword\">Confirm your password</label>\r\n              <Field id=\"passwordConfirmation\" type=\"password\" placeholder=\"passwordConfirmation\" name=\"passwordConfirmation\"/>\r\n             <H5>{touched.passwordConfirmation && errors.passwordConfirmation}</H5>\r\n             <label htmlFor = \"rememberPassword\">Let us remember your password?</label>\r\n              <Field id=\"rememberPassword\" type=\"checkbox\" name=\"rememberPassword\"/>\r\n              <H5>{touched.rememberPassword && errors.rememberPassword}</H5>\r\n              <button type=\"submit\">SignUp</button>\r\n           </Form> \r\n             \r\n   \r\n  );\r\n};\r\n\r\n        \r\n\r\n\r\n    \r\nexport default withFormik({\r\n    mapPropsToValues: () => {\r\n        return{\r\n            username: '',\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            rememberPassword: false\r\n        }\r\n        // if(rememberPassword===true){\r\n        //     setToken(localStorage.getItem('token')\r\n        // }\r\n    },\r\n    handleSubmit(values){\r\n    \r\n        Swal.fire({\r\n            title: 'Now Please Login',\r\n            imageUrl: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSDOamKMfdxmxQlQsH4_tGp_gfuik8vLENLJl_HxrlswCNvF2Rw',\r\n            imageHeight: 100,\r\n            imageAlt: 'userCity'\r\n          })\r\n        console.log(values)\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string()\r\n          .min(3, \"Must be 3 characters or more\")\r\n          .max(15, \"Must be less than 15 characters\")\r\n          .required(\"This field is required\"),\r\n        password: Yup.string()\r\n          .min(3, \"Must be 3 characters or more\")\r\n          .max(18, \"Must be less than 18 characters\")\r\n          .required(\"This field is required\"),\r\n          passwordConfirmation: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n      })\r\n})(SignUp)"]},"metadata":{},"sourceType":"module"}